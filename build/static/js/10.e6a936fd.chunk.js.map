{"version":3,"sources":["components/dataTable/index.js","components/index.js","pages/planning/submited-kpi/table-submited-kpi.js","pages/planning/submited-kpi/index.js"],"names":["TextArea","Input","EditableContext","React","createContext","EditableFormRow","Form","create","form","props","index","Provider","value","EditableCell","change","e","record","handleChange","validateFields","error","values","renderCell","editable","dataIndex","placeholder","type","title","Item","style","margin","getFieldDecorator","rules","required","message","initialValue","id","className","ref","node","input","onChange","disabled","autoSize","minRows","maxRows","this","children","action","restProps","Consumer","Component","DataTable","dataSource","columns","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","components","body","row","cell","columnList","map","col","onCell","rowClassName","bordered","scroll","x","pagination","marginBottom","TableDrafKPI","SubmitedKPI","getAllData","draft","setState","draftData","state","connectToComponent","connect","dispatch","withRouter"],"mappings":"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","file":"static/js/10.e6a936fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Input, InputNumber, Form } from 'antd';\nimport 'antd/dist/antd.css';\nimport './dataTable-style.scss';\nimport { useMediaQuery } from 'react-responsive';\n\nconst { TextArea } = Input;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  change = (e) => {\n    const { record, handleChange } = this.props;\n    this.form.validateFields((error, values) => {\n      handleChange({ ...record, ...values });\n    });\n  };\n\n  renderCell = (form) => {\n    this.form = form;\n    const {\n      editable,\n      dataIndex,\n      record,\n      placeholder,\n      type,\n      title\n    } = this.props;\n\n    return (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required`\n            }\n          ],\n          initialValue: record[dataIndex]\n        })(\n          type === 'number' ? (\n            <InputNumber\n              id={title}\n              className=\"input\"\n              ref={(node) => (this.input = node)}\n              placeholder={placeholder}\n              type={type}\n              onChange={this.change}\n              disabled={!editable}\n            />\n          ) : (\n            <TextArea\n              id={title}\n              className=\"input\"\n              ref={(node) => (this.input = node)}\n              placeholder={placeholder}\n              autoSize={{ minRows: 3, maxRows: 5 }}\n              onChange={this.change}\n              disabled={!editable}\n            />\n          )\n        )}\n      </Form.Item>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleChange,\n      children,\n      action,\n      ...restProps\n    } = this.props;\n\n    return (\n      <td {...restProps}>\n        {action ? (\n          children\n        ) : (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        )}\n      </td>\n    );\n  }\n}\n\nconst DataTable = (props) => {\n  const { dataSource, handleChange, columns } = props;\n\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n\n  const components = {\n    body: {\n      row: EditableFormRow,\n      cell: EditableCell\n    }\n  };\n  const columnList = columns.map((col) => {\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        type: col.type,\n        action: col.action,\n        placeholder: col.placeholder,\n        handleChange\n      })\n    };\n  });\n  return (\n    <div>\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={dataSource}\n        columns={columnList}\n        scroll={isDesktopOrLaptop ? { x: false } : { x: true }}\n        pagination={false}\n        style={{ marginBottom: 10 }}\n      />\n    </div>\n  );\n};\n\nexport default DataTable;\n","export { default as DataTable } from './dataTable';\nexport { default as LazyLoad } from './lazyLoad';\n","import React, { Component } from 'react';\nimport { DataTable } from '../../../components';\n\nclass TableDrafKPI extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'Cascading/Self KPI',\n        dataIndex: 'typeKpi',\n        placeholder: 'Cascading/Self KPI',\n        editable: false\n      },\n      {\n        title: 'KPI Subject',\n        dataIndex: 'kpi',\n        placeholder: 'Enter 2020 baseline',\n        editable: false\n      },\n      {\n        title: '2019 Baseline',\n        dataIndex: 'baseline',\n        placeholder: 'Enter 2019 baseline',\n        editable: false\n      },\n      {\n        title: 'Weight (100%)',\n        dataIndex: 'weight',\n        placeholder: 'Enter KPI Weight',\n        type: 'number',\n        editable: false\n      },\n      {\n        title: 'L1',\n        dataIndex: 'l1',\n        placeholder: 'Enter Level 1',\n        editable: false\n      },\n      {\n        title: 'L2',\n        dataIndex: 'l2',\n        placeholder: 'Enter Level 2',\n        editable: false\n      },\n      {\n        title: 'L3',\n        dataIndex: 'l3',\n        placeholder: 'Enter Level 3',\n        editable: false\n      }\n    ];\n  }\n\n  render() {\n    const { columns } = this;\n    const { dataSource } = this.props;\n    return (\n      <div>\n        <DataTable\n          columns={columns}\n          dataSource={dataSource}\n        />\n      </div>\n    );\n  }\n}\nexport default TableDrafKPI;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport TableSubmitedKPI from './table-submited-kpi';\n\nclass SubmitedKPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllData();\n  }\n\n  getAllData = () => {\n    const { draft } = this.props;\n    this.setState({\n      dataSource: draft.draftData\n    });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div>\n        <TableSubmitedKPI\n          dataSource={dataSource}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  draft: state.draft\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst connectToComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubmitedKPI);\n\nexport default withRouter(connectToComponent);\n"],"sourceRoot":""}